# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: hello.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0bhello.proto\x12\x1c\x63om.example.grpcserver.hello\"3\n\x0cHelloRequest\x12\x11\n\tfirstName\x18\x01 \x01(\t\x12\x10\n\x08lastName\x18\x02 \x01(\t\"!\n\rHelloResponse\x12\x10\n\x08greeting\x18\x01 \x01(\t2p\n\x0cHelloService\x12`\n\x05hello\x12*.com.example.grpcserver.hello.HelloRequest\x1a+.com.example.grpcserver.hello.HelloResponseB\x02P\x01\x62\x06proto3')



_HELLOREQUEST = DESCRIPTOR.message_types_by_name['HelloRequest']
_HELLORESPONSE = DESCRIPTOR.message_types_by_name['HelloResponse']
HelloRequest = _reflection.GeneratedProtocolMessageType('HelloRequest', (_message.Message,), {
  'DESCRIPTOR' : _HELLOREQUEST,
  '__module__' : 'hello_pb2'
  # @@protoc_insertion_point(class_scope:com.example.grpcserver.hello.HelloRequest)
  })
_sym_db.RegisterMessage(HelloRequest)

HelloResponse = _reflection.GeneratedProtocolMessageType('HelloResponse', (_message.Message,), {
  'DESCRIPTOR' : _HELLORESPONSE,
  '__module__' : 'hello_pb2'
  # @@protoc_insertion_point(class_scope:com.example.grpcserver.hello.HelloResponse)
  })
_sym_db.RegisterMessage(HelloResponse)

_HELLOSERVICE = DESCRIPTOR.services_by_name['HelloService']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'P\001'
  _HELLOREQUEST._serialized_start=45
  _HELLOREQUEST._serialized_end=96
  _HELLORESPONSE._serialized_start=98
  _HELLORESPONSE._serialized_end=131
  _HELLOSERVICE._serialized_start=133
  _HELLOSERVICE._serialized_end=245
# @@protoc_insertion_point(module_scope)
